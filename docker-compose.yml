services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # env_file:
    #   - './frontend/.env.local'  
    container_name: news-frontend
    networks:
      - webnet
    restart: unless-stopped
    volumes:
      - frontend_dist:/news/frontend/dist

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: news-backend
    env_file:
      - './backend/.env'  
    ports:
      - '3000:3000'
    networks:
      - webnet
    restart: unless-stopped  
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    networks:
      - webnet
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_dist:/var/www/frontend:ro 

  postgres:
    image: postgres:14.1-alpine
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5431:5432'
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webnet

volumes:
  postgres_data:
  frontend_dist:

networks:
  webnet:
